NODES -> 1 if (startNumber > endNumber) START,2 return -1; END,3 if (startNumber < 2),4 return -1; END,5 int i = startNumber,6 i <= endNumber,7 if (i % 2 == 0),8 continue;,9 boolean isPrime = true;,10 int j = 2,11 j < i,12 if (i % j == 0),13 isPrime = false;,14 break;,15 j++,16 if (isPrime),17 return i; END,18 i++,19 return -1; END

TEST PATHS FOR NODE COVERAGE
PATH 1 -> 1 2
TC 1 -> 12 1
OUTPUT 1 -> -1

PATH 2 -> 1 3 4
TC 2 -> 1 10
OUTPUT 2 -> -1

PATH 3 -> 1 3 5 6 7 9 10 11 12 15 11 12 15 11 12 15 11 16 17 // why more than one loop? second is redundant
TC 3 -> 5 6
OUTPUT -> 5

PATH 4 -> 1 3 5 6 7 8 18 6 19
TC 4 -> 4 4
OUTPUT -> -1

PATH 5 -> 1 3 5 6 7 9 10 11 12 15 11 12 13 14 16 18 6 19 //3adeet leh 3al 18 w el 15?
TC 5 -> 9 9
OUTPUT -> -1

